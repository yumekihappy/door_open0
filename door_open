#!/usr/bin/env python
#　-*- coding: utf-8 -*-
#---------------------------------
#Title:ドアが空いているときに進むノード
#Author:Ito Yumeki
#Date:2021/7/1
#---------------------------------
import rospy
from sensor_msgs.msg import LaserScan
from geometry_msgs.msg import Twist

class SubscriberClass():
    def __init__(self):
        self.range_message = rospy.Subscriber('/scan,'LaserScan,self.messageCB)
        self.Laser = LaserScan()

    def messageCB(self,receive_msg):
        self.laser = receive_msg

    def message_value(self):
        if bool(self.laser.range):
            value = self.laser.ranges[359]
            print'value'
            return value

class PublishClass():
    def __init__(self):
        self.pub_message = rospy.Publisher('cmd_vel_mux/input/teleope',Twist,queue_size=1)
        self.count = 1

    def linerContorol(self,value);
        twist_cmd = Twist()
        twist_cmd.linear.x = value
        rospy.sleep(0.1)
        self.pub_message.Publish(twist_cmd)

    def main():
        sefety_distance = 2.0
        rospy.loginfo('start"open_door"')
        sub = SubscriberClass()
        pub = PublishClass()
        while not rospy.is_shutdown():
            state = sub.message_value()
            if state >= safety_distance:
                rospy.loginfo('start foward')
                for i in range(10):
                    pub.linerContorol(0.1)
                    break
                else:
                    pass

if __name__=='__main__':
    rospy.init_node('door_open')
    main()
